{"version":3,"file":"static/js/828.74e43a86.chunk.js","mappings":"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","sources":["api/movies-services.js","components/Loader.jsx","components/MoviesList.jsx","components/Section.jsx","components/SearchForm.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst searchParams = new URLSearchParams({\n  api_key: '1baaa3f67deb4da4620757139c87f39d',\n  language: `en-US`,\n  include_adult: false,\n});\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`trending/movie/day?${searchParams}`);\n  const trends = data.results;\n\n  return trends.map(({ title, poster_path, vote_average, id }) => {\n    return { title, poster_path, vote_average, id };\n  });\n};\n\nexport const searchByName = async query => {\n  const { data } = await axios.get(\n    `search/movie?query=${query}&${searchParams}`\n  );\n  const moviesByName = data.results;\n  return moviesByName.map(({ title, poster_path, vote_average, id }) => ({\n    title,\n    poster_path,\n    vote_average,\n    id,\n  }));\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?${searchParams}`);\n  const { title, name, vote_average, overview, genres, poster_path } = data;\n\n  return { title, name, vote_average, overview, genres, poster_path };\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits?${searchParams}`);\n  const dataCast = data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n\n  return dataCast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?${searchParams}`);\n  const dataReviews = data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n\n  return dataReviews;\n};\n","const Loader = () => {\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <div className=\"spinner-border\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className=\"list-group\">\n      {movies.map(({ title, id, vote_average }) => (\n        <li\n          key={id}\n          className=\" d-flex list-group-item list-group-item-action \"\n        >\n          <Link\n            to={`/${id}`}\n            state={{ from: location }}\n            className=\"link-dark link-offset-2 link-underline-opacity-25 link-underline-opacity-100-hover\"\n          >\n            <i className=\"bi bi-film me-2\"></i>\n            {title}\n          </Link>\n          <span className=\"badge  bg-primary rounded-pill ms-auto p-2  \">\n            imdb: {vote_average.toFixed(1)}\n          </span>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import PropTypes from 'prop-types';\n\nexport const Section = ({ children }) => {\n  return (\n    <section className=\"pt-3 pb-3 mt-5\">\n      <div className=\"container\">{children}</div>\n    </section>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import { useSearchParams } from 'react-router-dom';\n\nconst SearchForm = () => {\n  const [, setSearchParams] = useSearchParams();\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const query = event.target.query.value.trim().toLowerCase();\n    if (!query) {\n      return;\n    }\n    setSearchParams({ query });\n  };\n  return (\n    <form className=\"p-4 bg-primary\" onSubmit={handleSubmit}>\n      <div className=\"input-group input-group-lg\">\n        <button type=\"submit\" className=\"btn btn-primary border \">\n          <i className=\"bi bi-search\"></i>\n        </button>\n        <input\n          name=\"query\"\n          type=\"text\"\n          className=\"form-control\"\n          aria-label=\"Sizing example input\"\n          aria-describedby=\"inputGroup-sizing-lg\"\n          placeholder=\"Enter name of movie...\"\n        />\n      </div>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import { searchByName } from 'api/movies-services';\nimport Loader from 'components/Loader';\nimport MoviesList from 'components/MoviesList';\nimport SearchForm from 'components/SearchForm';\nimport { Section } from 'components/Section';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    setIsLoading(true);\n    const asyncWrapper = async () => {\n      try {\n        const queryMovies = await searchByName(query);\n\n        if (queryMovies.length === 0) {\n          setError(true);\n        } else {\n          setError(false);\n        }\n        setMovies(queryMovies);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    asyncWrapper();\n  }, [query]);\n  return (\n    <>\n      <Section>\n        <h1 className=\"uppercase text-4xl text-gray-600 text-center\">\n          Search Movies\n        </h1>\n        <SearchForm />\n        {isLoading && <Loader />}\n        {error ? (\n          <div>{query} film does not exist!</div>\n        ) : (\n          <MoviesList movies={movies} />\n        )}\n      </Section>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","searchParams","URLSearchParams","api_key","language","include_adult","getTrending","data","trends","results","map","title","poster_path","vote_average","id","searchByName","query","moviesByName","getMovieDetails","movieId","name","overview","genres","getCast","dataCast","cast","character","profile_path","getReviews","dataReviews","author","content","className","role","movies","location","useLocation","to","state","from","toFixed","Section","children","useSearchParams","setSearchParams","onSubmit","event","preventDefault","target","value","trim","toLowerCase","type","placeholder","useState","setMovies","isLoading","setIsLoading","error","setError","get","useEffect","asyncWrapper","queryMovies","length","Loader","MoviesList"],"sourceRoot":""}