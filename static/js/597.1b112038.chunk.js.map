{"version":3,"file":"static/js/597.1b112038.chunk.js","mappings":"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","sources":["api/movies-services.js","components/Cast.jsx","components/Loader.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst searchParams = new URLSearchParams({\n  api_key: '1baaa3f67deb4da4620757139c87f39d',\n  language: `en-US`,\n  include_adult: false,\n});\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`trending/movie/day?${searchParams}`);\n  const trends = data.results;\n\n  return trends.map(({ title, poster_path, vote_average, id }) => {\n    return { title, poster_path, vote_average, id };\n  });\n};\n\nexport const searchByName = async query => {\n  const { data } = await axios.get(\n    `search/movie?query=${query}&${searchParams}`\n  );\n  const moviesByName = data.results;\n  return moviesByName.map(({ title, poster_path, vote_average, id }) => ({\n    title,\n    poster_path,\n    vote_average,\n    id,\n  }));\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?${searchParams}`);\n  const { title, name, vote_average, overview, genres, poster_path } = data;\n\n  return { title, name, vote_average, overview, genres, poster_path };\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits?${searchParams}`);\n  const dataCast = data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n\n  return dataCast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?${searchParams}`);\n  const dataReviews = data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n\n  return dataReviews;\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport imgFallback from 'images/fallback.png';\n\nimport { getCast } from 'api/movies-services';\nimport Loader from './Loader';\n\nconst Cast = () => {\n  const [dataCast, setDataCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const asyncWraperGetCast = async () => {\n      try {\n        const dataCast = await getCast(movieId);\n        if (dataCast.length === 0) {\n          setError(true);\n        }\n        setDataCast(dataCast);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    asyncWraperGetCast();\n  }, [movieId]);\n\n  const getPoster = profile_path =>\n    profile_path\n      ? `https://image.tmdb.org/t/p/w200${profile_path}`\n      : imgFallback;\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {!error ? (\n        <ul className=\"list-group list-group-flush\">\n          {dataCast.map(({ name, character, profile_path, id }) => (\n            <li key={id} className=\"list-group-item\">\n              <div>\n                <img\n                  style={{ maxWidth: '100px' }}\n                  className=\"img-thumbnail\"\n                  src={getPoster(profile_path)}\n                  alt={name}\n                />{' '}\n              </div>\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any cast for this movie.</p>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","const Loader = () => {\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <div className=\"spinner-border\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n"],"names":["axios","searchParams","URLSearchParams","api_key","language","include_adult","getTrending","data","trends","results","map","title","poster_path","vote_average","id","searchByName","query","moviesByName","getMovieDetails","movieId","name","overview","genres","getCast","dataCast","cast","character","profile_path","getReviews","dataReviews","author","content","useState","setDataCast","isLoading","setIsLoading","error","setError","useParams","useEffect","asyncWraperGetCast","length","getPoster","imgFallback","className","style","maxWidth","src","alt","role"],"sourceRoot":""}