{"version":3,"file":"static/js/913.1dbcc8ac.chunk.js","mappings":"+SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAe,IAAIC,gBAAgB,CACvCC,QAAS,mCACTC,SAAS,QACTC,eAAe,IAGJC,EAAW,mCAAG,wGACFN,EAAAA,EAAAA,IAAA,6BAAgCC,IAD9B,uBACjBM,EADiB,EACjBA,KACFC,EAASD,EAAKE,QAFK,kBAIlBD,EAAOE,KAAI,YAChB,MAAO,CAAEC,MADqD,EAA3CA,MACHC,YAD8C,EAApCA,YACGC,aADiC,EAAvBA,aACIC,GADmB,EAATA,GAEtD,KANwB,2CAAH,qDASXC,EAAY,mCAAG,WAAMC,GAAN,2FACHhB,EAAAA,EAAAA,IAAA,6BACCgB,EADD,YACUf,IAFP,uBAClBM,EADkB,EAClBA,KAGFU,EAAeV,EAAKE,QAJA,kBAKnBQ,EAAaP,KAAI,kBAA+C,CACrEC,MADsB,EAAGA,MAEzBC,YAFsB,EAAUA,YAGhCC,aAHsB,EAAuBA,aAI7CC,GAJsB,EAAqCA,GAArC,KALE,2CAAH,sDAaZI,EAAe,mCAAG,WAAMC,GAAN,qGACNnB,EAAAA,EAAAA,IAAA,gBAAmBmB,EAAnB,YAA8BlB,IADxB,uBACrBM,EADqB,EACrBA,KACAI,EAA6DJ,EAA7DI,MAAOS,EAAsDb,EAAtDa,KAAMP,EAAgDN,EAAhDM,aAAcQ,EAAkCd,EAAlCc,SAAUC,EAAwBf,EAAxBe,OAAQV,EAAgBL,EAAhBK,YAFxB,kBAItB,CAAED,MAAAA,EAAOS,KAAAA,EAAMP,aAAAA,EAAcQ,SAAAA,EAAUC,OAAAA,EAAQV,YAAAA,IAJzB,2CAAH,sDAOfW,EAAO,mCAAG,WAAMJ,GAAN,2FACEnB,EAAAA,EAAAA,IAAA,iBAAoBmB,EAApB,oBAAuClB,IADzC,uBACbM,EADa,EACbA,KACFiB,EAAWjB,EAAKkB,KAAKf,KAAI,YAC7B,MAAO,CACLU,KAFsE,EAAxCA,KAG9BM,UAHsE,EAAlCA,UAIpCC,aAJsE,EAAvBA,aAK/Cb,GALsE,EAATA,GAOhE,IAToB,kBAWdU,GAXc,2CAAH,sDAcPI,EAAU,mCAAG,WAAMT,GAAN,2FACDnB,EAAAA,EAAAA,IAAA,iBAAoBmB,EAApB,oBAAuClB,IADtC,uBAChBM,EADgB,EAChBA,KACFsB,EAActB,EAAKE,QAAQC,KAAI,YACnC,MAAO,CACLoB,OAF8D,EAA1BA,OAGpCC,QAH8D,EAAlBA,QAI5CjB,GAJ8D,EAATA,GAMxD,IARuB,kBAUjBe,GAViB,2CAAH,qD,mCC1CvB,IAVe,WACb,OACE,gBAAKG,UAAU,gCAAf,UACE,gBAAKA,UAAU,iBAAiBC,KAAK,SAArC,UACE,iBAAMD,UAAU,kBAAhB,2BAIP,C,mECNYE,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACxB,OACE,oBAASH,UAAU,iBAAnB,UACE,gBAAKA,UAAU,YAAf,SAA4BG,KAGjC,C,+IC0CD,EAhDkB,SAAC,GAEZ,IAAD,IADJC,aAAgBzB,EACZ,EADYA,MAAOS,EACnB,EADmBA,KAAMP,EACzB,EADyBA,aAAcQ,EACvC,EADuCA,SAAUC,EACjD,EADiDA,OAAQV,EACzD,EADyDA,YAEvDyB,EAAU,OAAG1B,QAAH,IAAGA,EAAAA,EAASS,EAiB5B,OACE,gBAAKY,UAAU,+CAAf,UACE,iBAAKA,UAAU,UAAf,WACE,gBAAKA,UAAU,uBAAf,UACE,gBACEM,MAAO,CAAEC,SAAU,SACnBC,IATQ,SAAA5B,GAAW,OAC3BA,EAAW,yCAAqCA,GAAgB6B,CADrC,CASdC,CAAU9B,GACfoB,UAAU,YACVW,IAAKhC,OAGT,gBAAKqB,UAAU,WAAf,UACE,iBAAKA,UAAU,YAAf,WACE,eAAIA,UAAU,cAAd,SAA6BK,KAC7B,wCApBDO,KAAKC,MAAqB,GAAfhC,GAoBV,QACA,sCACA,cAAGmB,UAAU,YAAb,SACGX,GAAsB,oBAEzB,oCACA,cAAGW,UAAU,YAAb,SAlCc,IAAlBV,EAAOwB,OACF,iBAEAxB,EAAOZ,KAAI,SAAAqC,GAAK,OAAIA,EAAM3B,IAAV,IAAgB4B,KAAK,iBAqCjD,E,mCCiCD,EA1EqB,WAAO,IAAD,IACzB,GAAwCC,EAAAA,EAAAA,UAAS,MAAjD,eAAOb,EAAP,KAAqBc,EAArB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KACQnC,GAAYoC,EAAAA,EAAAA,MAAZpC,QAEFqC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAkB3D,OAhBAC,EAAAA,EAAAA,YAAU,WACRV,GAAa,GACb,IAAMW,EAAuB,mCAAG,8GAEF7C,EAAAA,EAAAA,IAAgBC,GAFd,OAEtB6C,EAFsB,OAI5Bd,EAAgBc,GAJY,gDAM5BV,EAAS,EAAD,IANoB,yBAQ5BF,GAAa,GARe,4EAAH,qDAW7BW,GACD,GAAE,CAAC5C,KAGF,UAACe,EAAA,EAAD,YACE,mBACE+B,KAAK,SACLjC,UAAU,wDAFZ,UAIE,UAAC,KAAD,CACEkC,GAAIR,EAAoBS,QACxBnC,UAAU,2CAFZ,UAIG,MAJH,gBAODmB,IAAa,SAACiB,EAAA,EAAD,IACbf,GACC,4CAEAjB,IAAgB,SAAC,EAAD,CAAWA,aAAcA,KAG3C,iBAAKJ,UAAU,+CAAf,WACE,mDACA,gBAAIA,UAAU,QAAd,WACE,yBACE,SAAC,KAAD,CACEA,UAAU,gFACVkC,GAAG,OAFL,qBAOF,yBACE,SAAC,KAAD,CACElC,UAAU,2EACVkC,GAAG,UAFL,8BAUN,SAAC,EAAAG,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,QAIP,C","sources":["api/movies-services.js","components/Loader.jsx","components/Section.jsx","components/MovieCard.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst searchParams = new URLSearchParams({\n  api_key: '1baaa3f67deb4da4620757139c87f39d',\n  language: `en-US`,\n  include_adult: false,\n});\n\nexport const getTrending = async () => {\n  const { data } = await axios.get(`trending/movie/day?${searchParams}`);\n  const trends = data.results;\n\n  return trends.map(({ title, poster_path, vote_average, id }) => {\n    return { title, poster_path, vote_average, id };\n  });\n};\n\nexport const searchByName = async query => {\n  const { data } = await axios.get(\n    `search/movie?query=${query}&${searchParams}`\n  );\n  const moviesByName = data.results;\n  return moviesByName.map(({ title, poster_path, vote_average, id }) => ({\n    title,\n    poster_path,\n    vote_average,\n    id,\n  }));\n};\n\nexport const getMovieDetails = async movieId => {\n  const { data } = await axios.get(`movie/${movieId}?${searchParams}`);\n  const { title, name, vote_average, overview, genres, poster_path } = data;\n\n  return { title, name, vote_average, overview, genres, poster_path };\n};\n\nexport const getCast = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/credits?${searchParams}`);\n  const dataCast = data.cast.map(({ name, character, profile_path, id }) => {\n    return {\n      name,\n      character,\n      profile_path,\n      id,\n    };\n  });\n\n  return dataCast;\n};\n\nexport const getReviews = async movieId => {\n  const { data } = await axios.get(`/movie/${movieId}/reviews?${searchParams}`);\n  const dataReviews = data.results.map(({ author, content, id }) => {\n    return {\n      author,\n      content,\n      id,\n    };\n  });\n\n  return dataReviews;\n};\n","const Loader = () => {\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <div className=\"spinner-border\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import PropTypes from 'prop-types';\n\nexport const Section = ({ children }) => {\n  return (\n    <section className=\"pt-3 pb-3 mt-5\">\n      <div className=\"container\">{children}</div>\n    </section>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","import imgFallback from 'images/fallback.png';\n\nconst MovieCard = ({\n  movieDetails: { title, name, vote_average, overview, genres, poster_path },\n}) => {\n  const movieTitle = title ?? name;\n\n  const movieGenres = () => {\n    if (genres.length === 0) {\n      return 'No information';\n    } else {\n      return genres.map(genre => genre.name).join(', ');\n    }\n  };\n\n  const userScore = () => {\n    return Math.round(vote_average * 10);\n  };\n\n  const getPoster = poster_path =>\n    poster_path ? `https://image.tmdb.org/t/p/w200${poster_path}` : imgFallback;\n\n  return (\n    <div className=\"card mb-0 boarder rounded-0 rounded-top mt-0\">\n      <div className=\"row g-0\">\n        <div className=\"col-md-3 card-body  \">\n          <img\n            style={{ maxWidth: '200px' }}\n            src={getPoster(poster_path)}\n            className=\"img-fluid\"\n            alt={title}\n          />\n        </div>\n        <div className=\"col-md-8\">\n          <div className=\"card-body\">\n            <h1 className=\"card-title \">{movieTitle}</h1>\n            <p>User Score: {userScore()}%</p>\n            <h2>Overview</h2>\n            <p className=\"card-text\">\n              {overview ? overview : 'No information'}\n            </p>\n            <h3>Genres</h3>\n            <p className=\"card-text\">{movieGenres()}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieCard;\n","import { getMovieDetails } from 'api/movies-services';\nimport Loader from 'components/Loader';\nimport MovieCard from 'components/MovieCard';\nimport { Section } from 'components/Section';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\n\nconst MovieDetails = () => {\n  const [movieDetails, setmovieDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    setIsLoading(true);\n    const asyncWraperMovieDetails = async () => {\n      try {\n        const dataDetails = await getMovieDetails(movieId);\n\n        setmovieDetails(dataDetails);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    asyncWraperMovieDetails();\n  }, [movieId]);\n\n  return (\n    <Section>\n      <button\n        type=\"button\"\n        className=\"btn btn-outline-secondary bg-primary-subtle mt-4 mb-1\"\n      >\n        <NavLink\n          to={backLinkLocationRef.current}\n          className=\"link-underline link-underline-opacity-0 \"\n        >\n          {'<<<'} Go back\n        </NavLink>\n      </button>\n      {isLoading && <Loader />}\n      {error ? (\n        <div>Page not found</div>\n      ) : (\n        movieDetails && <MovieCard movieDetails={movieDetails} />\n      )}\n\n      <div className=\"container border border-top-0 rounded-bottom\">\n        <p>Additional information</p>\n        <ul className=\"gap-1\">\n          <li>\n            <NavLink\n              className=\"d-inline-flex focus-ring py-1 px-2 text-decoration-none border rounded-2 mb-2\"\n              to=\"cast\"\n            >\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              className=\"d-inline-flex focus-ring py-1 px-2 text-decoration-none border rounded-2\"\n              to=\"reviews\"\n            >\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n      </div>\n\n      <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n    </Section>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","searchParams","URLSearchParams","api_key","language","include_adult","getTrending","data","trends","results","map","title","poster_path","vote_average","id","searchByName","query","moviesByName","getMovieDetails","movieId","name","overview","genres","getCast","dataCast","cast","character","profile_path","getReviews","dataReviews","author","content","className","role","Section","children","movieDetails","movieTitle","style","maxWidth","src","imgFallback","getPoster","alt","Math","round","length","genre","join","useState","setmovieDetails","isLoading","setIsLoading","error","setError","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","asyncWraperMovieDetails","dataDetails","type","to","current","Loader","Suspense","fallback"],"sourceRoot":""}